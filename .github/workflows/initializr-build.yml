name: Initializr

env:
  JAVA_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server -XX:+UseG1GC"
  GRADLE_OPTS: "-Xms512m -Xmx6048m -Xss128m -XX:ReservedCodeCacheSize=512m -server -XX:+UseG1GC"
  TERM: xterm-256color
  JDK_CURRENT: 11.0.11
  HELM_CURRENT: v3.6.3
  HELM_CAS_VERSION: 6.4.0-SNAPSHOT
  HELM_BOOT_VERSION: 2.5.2
  CAS_MGMT_VERSION: 6.3.3
  CAS_MGMT_SPRING_BOOT_VERSION: 2.3.7.RELEASE
  DOCKER_USER: ${{ secrets.DOCKER_USER }}
  DOCKER_PWD: ${{ secrets.DOCKER_PWD }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

##########################################################################

on:
  push:
    branches: [ master  ]
  pull_request:
    branches: [ master  ]

##########################################################################

jobs:
  cancel-previous-runs:
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - uses: styfle/cancel-workflow-action@0.7.0
        with:
          access_token: ${{ github.token }}
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Build Initializr
        run: ./gradlew --build-cache --configure-on-demand --no-daemon clean build -x test -x javadoc -x check --parallel
      - uses: actions/upload-artifact@v2
        with:
          name: binary-artifacts
          path: ./**/build/libs/*.*
  ##########################################################################
  supported-versions:
    needs: [build]
    runs-on: ubuntu-latest
    outputs:
      supported-versions: ${{ steps.get-supported-versions.outputs.supported-versions }}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - id: run-initializr
        name: Run Initializer to get supported versions
        run: |
          . ./ci/functions.sh
          java -jar app/build/libs/app.jar &
          waitForInitializr
      - id: print-supported-versions
        name: Print supported versions
        run: curl -q http://localhost:8081/actuator/supportedVersions | jq .
      - id: get-supported-versions
        name: Get supported versions for matrix
        run: echo "::set-output name=supported-versions::$(curl -q http://localhost:8081/actuator/supportedVersions)]}"
      - id: stop-initializr
        name: Stop Initializr
        run: |
          . ./ci/functions.sh
          stopInitializr
  ##########################################################################
  sync-cas-overlay:
    needs: [supported-versions]
    if: ${{ github.event_name == 'push' && env.GH_TOKEN != null}}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        versions: ${{fromJSON(needs.supported-versions.outputs.supported-versions)}}
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JDK_CURRENT }}
      - name: Initialize
        run: chmod -R 777 ./ci/*.sh
      - uses: actions/download-artifact@v2
        with:
          name: binary-artifacts
      - name: Sync Overlay
        if: ${{ matrix.versions.sync == "true" }}
        run: ./ci/validate-cas-overlay.sh ${{ matrix.versions.casVersion }} ${{ matrix.versions.bootVersion }} ${{ matrix.versions.branch }}
  ##########################################################################
